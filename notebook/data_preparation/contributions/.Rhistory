rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha))
external_contributions_2019_2025 |>
slice_head(n=10) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)
dates_aportes<-as.Date("2019-07-06")
dates_cotizaciones<-processed_cotizaciones_dolar_2011_2025$fecha
i<-1
dates_aportes[i]
date_aporte<-dates_aportes[i]
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
difftime(dates_cotizaciones, date_aporte, units = "days")
abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
diffs
which.min(diffs)
dates_cotizaciones[which.min(diffs)]
closest_dates[i]
closest_dates<-vector()
closest_dates[i]
dates_cotizaciones[which.min(diffs)]->closest_dates[i]
closest_dates
dates_cotizaciones[which.min(diffs)]
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
closest_dates
find_closest_date <- function(dates_aportes, dates_cotizaciones) {
closest_dates<-vector()
for (i in 1:length(dates_cotizaciones)) {
date_aporte<-dates_aportes[i]
# Find the difference in days between the target date and all dates in the vector
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
}
return(closest_dates)
}
external_contributions_2019_2025 |>
slice_head(n=10) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha))
external_contributions_2019_2025 |>
slice_head(n=1) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha))
find_closest_date(as.Date("2019-07-06"),processed_cotizaciones_dolar_2011_2025$fecha)
dates_aportes
dates_cotizaciones
for (i in 1:length(dates_cotizaciones)) {
date_aporte<-dates_aportes[i]
# Find the difference in days between the target date and all dates in the vector
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
}
for (i in 1:length(dates_aportes)) {
date_aporte<-dates_aportes[i]
# Find the difference in days between the target date and all dates in the vector
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
}
closest_dates
find_closest_date <- function(dates_aportes, dates_cotizaciones) {
closest_dates<-vector()
for (i in 1:length(dates_aportes)) {
date_aporte<-dates_aportes[i]
# Find the difference in days between the target date and all dates in the vector
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
}
return(closest_dates)
}
external_contributions_2019_2025 |>
slice_head(n=1) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha))
rm(dates_aportes)
rm(dates_cotizaciones)
rm(closest_dates)
rm(date_aporte)
rm(diff)
rm(diffs)
external_contributions_2019_2025 |>
slice_head(n=10) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
relocate(fecha_aporte, fecha_cotizacion)
external_contributions_2019_2025 |>
slice_sample(n=100) |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte)  |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
relocate(fecha_aporte, fecha_cotizacion)
external_contributions_2019_2025 |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion))->prueba
prueba
processed_cotizaciones_dolar_2011_2025
external_cotizaciones_dolar_2011_2025 |>
rename(fecha = Fecha.cotizacion, precio_dolar = Venta) |>
select(fecha, precio_dolar) |>
mutate(fecha = dmy(fecha))
#Cotizaciones
external_cotizaciones_dolar_2011_2025 |>
rename(fecha = Fecha.cotizacion, precio_dolar = Venta) |>
select(fecha, precio_dolar) |>
mutate(fecha = dmy(fecha)) |>
mutate(precio_dolar = str_replace_all(precio_dolar,",",".")) |>
mutate(precio_dolar = as.numeric(precio_dolar))
#Cotizaciones
external_cotizaciones_dolar_2011_2025 |>
rename(fecha = Fecha.cotizacion, precio_dolar = Venta) |>
select(fecha, precio_dolar) |>
mutate(fecha = dmy(fecha)) |>
mutate(precio_dolar = str_replace_all(precio_dolar,",",".")) |>
mutate(precio_dolar = as.numeric(precio_dolar))->processed_cotizaciones_dolar_2011_2025
external_contributions_2019_2025 |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion)) |>
left_join(processed_cotizaciones_dolar_2011_2025, by = c("fecha_cotizacion"= "fecha"))->prueba
prueba
external_contributions_2019_2025 |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion)) |>
left_join(processed_cotizaciones_dolar_2011_2025, by = c("fecha_cotizacion"= "fecha")) |>
rename(valor_usd = precio_dolar) |>
select(-fecha_cotizacion) |>
filter(fecha_aporte>as.Date("2019-06-30")) |>
mutate_if(is.character, str_to_upper) |>
mutate_if(is.character, remove_accents)->interim_contributions_2019_2025
interim_contributions_2019_2025
external_contributions_2011_2019 |>
select(-IDInforme, -CodDist, -CodAgrup,-Lista, -ColorLista,-LetraLista,-TipoInforme ) |>
mutate(aportante = paste(Nombre, Apellido)) |>
rename(dni_aportante = Documento, cuit_aportante = `Cuit/l`, fecha_aporte = FechaAporte,
modalidad_aporte = TipoAporte, partido = Agrupacion, distrito_aporte = Distrito) |>
select(-Nombre, -Apellido) |>
mutate(destino_aporte = paste(Eleccion,Etapa, Cargo) ) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"\\d")) |>
mutate(destino_aporte = str_to_upper(destino_aporte)) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"ELECCIÓN NACIONAL")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"GENERALES","GENERALES CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PRIMARIAS","P.A.S.O. CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"LEGISLATIVO","LEGISLATIVA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PARLASUR","PARLAMENTARIOS MERCOSUR")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"N\\.","NACIONALES")) |>
select(-Eleccion, -Etapa,-Cargo,-Orden) |>
mutate(distrito_aporte = str_replace_all(distrito_aporte,"AGRUP\\. NACIONALES","ORDEN NACIONAL")) |>
mutate(dni_aportante= as.character(dni_aportante)) |>
rename(monto_aporte = ImporteTot) |>
select(-ImporteDip, -ImporteSen) |>
mutate(fecha_aporte = as.Date(fecha_aporte)) |>
mutate_if(is.character, str_to_upper)
external_contributions_2011_2019 |>
select(-IDInforme, -CodDist, -CodAgrup,-Lista, -ColorLista,-LetraLista,-TipoInforme ) |>
mutate(aportante = paste(Nombre, Apellido)) |>
rename(dni_aportante = Documento, cuit_aportante = `Cuit/l`, fecha_aporte = FechaAporte,
modalidad_aporte = TipoAporte, partido = Agrupacion, distrito_aporte = Distrito) |>
select(-Nombre, -Apellido) |>
mutate(destino_aporte = paste(Eleccion,Etapa, Cargo) ) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"\\d")) |>
mutate(destino_aporte = str_to_upper(destino_aporte)) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"ELECCIÓN NACIONAL")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"GENERALES","GENERALES CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PRIMARIAS","P.A.S.O. CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"LEGISLATIVO","LEGISLATIVA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PARLASUR","PARLAMENTARIOS MERCOSUR")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"N\\.","NACIONALES")) |>
select(-Eleccion, -Etapa,-Cargo,-Orden) |>
mutate(distrito_aporte = str_replace_all(distrito_aporte,"AGRUP\\. NACIONALES","ORDEN NACIONAL")) |>
mutate(dni_aportante= as.character(dni_aportante)) |>
rename(monto_aporte = ImporteTot) |>
select(-ImporteDip, -ImporteSen) |>
mutate(fecha_aporte = as.Date(fecha_aporte)) |>
mutate_if(is.character, str_to_upper) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion)) |>
left_join(processed_cotizaciones_dolar_2011_2025, by = c("fecha_cotizacion"= "fecha")) |>
rename(valor_usd = precio_dolar) |>
select(-fecha_cotizacion) |>
mutate(tipo_aportante = NA) |>
relocate(dni_aportante, cuit_aportante, aportante, tipo_aportante, fecha_aporte, partido, monto_aporte, modalidad_aporte, distrito_aporte, destino_aporte, valor_usd) |>
arrange(fecha_aporte) |>
mutate_if(is.character, str_to_upper) |>
mutate_if(is.character, remove_accents)->interim_contributions_2011_2019
interim_contributions_2011_2019
interim_contributions_2011_2019 |>
tail()
interim_contributions_2011_2019 |>
tail() |>
relocate(valor_usd)
library(tidyverse)
library(readxl)
library(writexl)
library(googledrive)
library(lubridate)
#Cotizaciones
file_url<-"https://drive.google.com/uc?export=download&id=1JmvZIQJyvw3MN1vhF7pfwXFABVSiN1D1"
file_content <- drive_download(file = as_id(file_url), overwrite = TRUE)
library(tidyverse)
library(readxl)
library(writexl)
library(googledrive)
library(lubridate)
#Cotizaciones
file_url<-"https://drive.google.com/uc?export=download&id=1JmvZIQJyvw3MN1vhF7pfwXFABVSiN1D1"
file_content <- drive_download(file = as_id(file_url), overwrite = TRUE)
read.csv(file_content$local_path, sep = ";")->external_cotizaciones_dolar_2011_2025
file.remove( file_content$local_path)
#Contributions
file_url<-"https://drive.google.com/uc?export=download&id=1-ub0nALos8xDPzK74z-9S7CvywJaa3Oh"
file_content <- drive_download(file = as_id(file_url), overwrite = TRUE)
read_xlsx(file_content$local_path)->external_contributions_2011_2019
file.remove( file_content$local_path)
file_url<-"https://drive.google.com/uc?export=download&id=19-lHYhCuwcD74z-Dfw8FsHBVzrhL7o6r"
file_content <- drive_download(file = as_id(file_url), overwrite = TRUE)
read_csv(file_content$local_path)->external_contributions_2019_2025
file.remove( file_content$local_path)
find_closest_date <- function(dates_aportes, dates_cotizaciones) {
closest_dates<-vector()
for (i in 1:length(dates_aportes)) {
date_aporte<-dates_aportes[i]
# Find the difference in days between the target date and all dates in the vector
diffs <- abs(difftime(dates_cotizaciones, date_aporte, units = "days"))
# Return the closest date
dates_cotizaciones[which.min(diffs)] |> as.character()->closest_dates[i]
}
return(closest_dates)
}
replace_months_with_numbers <- function(input_string) {
month_replacements <- c(
"Enero" = "01", "Febrero" = "02", "Marzo" = "03",
"Abril" = "04", "Mayo" = "05", "Junio" = "06",
"Julio" = "07", "Agosto" = "08", "Septiembre" = "09",
"Octubre" = "10", "Noviembre" = "11", "Diciembre" = "12"
)
updated_string <- str_replace_all(input_string, month_replacements)
return(updated_string)
}
remove_accents <- function(text) {
text %>%
str_replace_all("Á", "A") %>%
str_replace_all("É", "E") %>%
str_replace_all("Í", "I") %>%
str_replace_all("Ó", "O") %>%
str_replace_all("Ú", "U")
}
#Cotizaciones
external_cotizaciones_dolar_2011_2025 |>
rename(fecha = Fecha.cotizacion, precio_dolar = Venta) |>
select(fecha, precio_dolar) |>
mutate(fecha = dmy(fecha)) |>
mutate(precio_dolar = str_replace_all(precio_dolar,",",".")) |>
mutate(precio_dolar = as.numeric(precio_dolar))->processed_cotizaciones_dolar_2011_2025
external_contributions_2019_2025 |>
mutate(Fecha = replace_months_with_numbers(Fecha)) |>
mutate(Fecha = str_replace_all(Fecha, " de ","-")) |>
mutate(Fecha = str_replace_all(Fecha,"^(\\d)-","0\\1-")) |>
mutate(Fecha = dmy(Fecha)) |>
select(-Cod_destino,-Recurrente,-`Banco Origen`,-Rectificado,-Anulado, -Observación) |>
rename(fecha_aporte = Fecha ) |>
mutate(Destino = str_remove_all(Destino,"\\d")) |>
mutate(Destino=str_squish(Destino)) |>
mutate(Destino = str_remove_all(Destino,"\\(|\\)")) |>
mutate(Agrupacion = str_remove_all(Agrupacion,"\\(.+?\\)")) |>
rename(destino_aporte = Destino, tipo_aportante = `Persona Humana/Jurídica`,
aportante = Aportante, cuit_aportante = `Cuil/Cuit`,
distrito_aporte = Distrito, partido = Agrupacion,
modalidad_aporte = Modalidad, monto_aporte = Monto) |>
mutate(dni_aportante = str_remove_all(cuit_aportante,"^..|.$")) |>
mutate(dni_aportante = str_remove_all(dni_aportante,"^0")) |>
relocate(dni_aportante,cuit_aportante, aportante, tipo_aportante, fecha_aporte,partido,monto_aporte, modalidad_aporte, distrito_aporte) |>
mutate_if(is.character,str_to_upper) |>
mutate(cuit_aportante = as.character(cuit_aportante)) |>
arrange(fecha_aporte) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion)) |>
left_join(processed_cotizaciones_dolar_2011_2025, by = c("fecha_cotizacion"= "fecha")) |>
rename(valor_usd = precio_dolar) |>
select(-fecha_cotizacion) |>
filter(fecha_aporte>as.Date("2019-06-30")) |>
mutate_if(is.character, str_to_upper) |>
mutate_if(is.character, remove_accents)->interim_contributions_2019_2025
external_contributions_2011_2019 |>
select(-IDInforme, -CodDist, -CodAgrup,-Lista, -ColorLista,-LetraLista,-TipoInforme ) |>
mutate(aportante = paste(Nombre, Apellido)) |>
rename(dni_aportante = Documento, cuit_aportante = `Cuit/l`, fecha_aporte = FechaAporte,
modalidad_aporte = TipoAporte, partido = Agrupacion, distrito_aporte = Distrito) |>
select(-Nombre, -Apellido) |>
mutate(destino_aporte = paste(Eleccion,Etapa, Cargo) ) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"\\d")) |>
mutate(destino_aporte = str_to_upper(destino_aporte)) |>
mutate(destino_aporte = str_remove_all(destino_aporte,"ELECCIÓN NACIONAL")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"GENERALES","GENERALES CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PRIMARIAS","P.A.S.O. CAMPAÑA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"LEGISLATIVO","LEGISLATIVA")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"PARLASUR","PARLAMENTARIOS MERCOSUR")) |>
mutate(destino_aporte = str_replace_all(destino_aporte,"N\\.","NACIONALES")) |>
select(-Eleccion, -Etapa,-Cargo,-Orden) |>
mutate(distrito_aporte = str_replace_all(distrito_aporte,"AGRUP\\. NACIONALES","ORDEN NACIONAL")) |>
mutate(dni_aportante= as.character(dni_aportante)) |>
rename(monto_aporte = ImporteTot) |>
select(-ImporteDip, -ImporteSen) |>
mutate(fecha_aporte = as.Date(fecha_aporte)) |>
mutate_if(is.character, str_to_upper) |>
mutate(fecha_cotizacion = find_closest_date(fecha_aporte, processed_cotizaciones_dolar_2011_2025$fecha)) |>
mutate(fecha_cotizacion = as.Date(fecha_cotizacion)) |>
left_join(processed_cotizaciones_dolar_2011_2025, by = c("fecha_cotizacion"= "fecha")) |>
rename(valor_usd = precio_dolar) |>
select(-fecha_cotizacion) |>
mutate(tipo_aportante = NA) |>
relocate(dni_aportante, cuit_aportante, aportante, tipo_aportante, fecha_aporte, partido, monto_aporte, modalidad_aporte, distrito_aporte, destino_aporte, valor_usd) |>
arrange(fecha_aporte) |>
mutate_if(is.character, str_to_upper) |>
mutate_if(is.character, remove_accents)->interim_contributions_2011_2019
interim_contributions_2011_2019 |>
filter(fecha_aporte<as.Date("2019-07-01")) |>
bind_rows(interim_contributions_2019_2025) |>
mutate(monto_aporte_usd = round(monto_aporte/valor_usd) )->processed_contributions_2011_2025
write_csv(processed_contributions_2011_2025,"../../../data/processed/contributions/processed_contributions_2011_2025.csv")
processed_contributions_2011_2025
processed_contributions_2011_2025 |>
filter(is.na(monto_aporte_usd))
